name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        
    - name: Install dependencies
      run: |
        cd services/api-gateway && npm install
        cd ../auth-service && npm install
        cd ../resume-service && npm install
        cd ../template-service && npm install
        cd ../ai-service && npm install
        cd ../blog-service && npm install
        cd ../frontend && npm install
        
    - name: Run linting
      run: |
        cd services/frontend && npm run lint
        
    - name: Run tests
      run: |
        cd services/api-gateway && npm test
        cd ../auth-service && npm test
        cd ../resume-service && npm test
        cd ../template-service && npm test
        cd ../ai-service && npm test
        cd ../blog-service && npm test
        cd ../frontend && npm test
     
  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}
        
    - name: Build and push API Gateway
      uses: docker/build-push-action@v4
      with:
        context: ./services/api-gateway
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/resume-builder-api-gateway:latest
        
    # Similar steps for other services...
        
  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
        
    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
      
    - name: Save DigitalOcean kubeconfig
      run: doctl kubernetes cluster kubeconfig save ${{ secrets.CLUSTER_NAME }}
      
    - name: Deploy to Kubernetes
      run: |
        kubectl apply -f k8s/
        kubectl rollout restart deployment api-gateway-deployment
        kubectl rollout restart deployment auth-service-deployment
        kubectl rollout restart deployment resume-service-deployment
        kubectl rollout restart deployment template-service-deployment
        kubectl rollout restart deployment ai-service-deployment
        kubectl rollout restart deployment blog-service-deployment
        kubectl rollout restart deployment frontend-deployment

